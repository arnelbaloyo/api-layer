spring.profiles.include: diag


apiml:
    enabled: true
    service:
        # The `apiml.service` node contains information required by any APIML service
        # id: discoverableclient  # Service ID of this service
        serviceId: discoverableclient
        #serviceId: discoverableclient2
        title: Service Spring Integration Enabler sample application API #©     #Copyright is for UTF8 encoding check
        description:  Sample API services to demonstrate Spring Integration Enabler

        scheme: https
        hostname: localhost  # Hostname that is advertised in Eureka. Default is valid only for localhost
        port: 10016  # Default port name for discoverable-clinet service
        # securePort: ${server.port}
        # #ipAddress: 127.0.0.1  # IP address that is advertised in Eureka. Default is valid only for localhost
        serviceIpAddress: 127.0.0.1
        # preferIpAddress: false

        # nonSecurePortEnabled: false
        # securePortEnabled: true

        baseUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}

        homePageUrl: https://${apiml.service.hostname}:${apiml.service.port}${server.servlet.contextPath}
        statusPageUrl: https://${apiml.service.hostname}:${apiml.service.port}${server.servlet.contextPath}/application/info
        healthCheckUrl: https://${apiml.service.hostname}:${apiml.service.port}${server.servlet.contextPath}/application/health

        discoveryServiceUrls: https://localhost:10011/eureka/

        routes:
            -   gateway-url: "ui/v1"
                service-url: ${server.servlet.contextPath}
            -   gateway-url: "api/v1"
                service-url: ${server.servlet.contextPath}/api/v1
            -   gateway-url: "ws/v1"
                service-url: ${server.servlet.contextPath}/ws
        apiInfo:
            -   apiId: org.zowe.discoverableclient
                version: 1.0.0
                gatewayUrl: api/v1
                swaggerUrl: https://${apiml.service.hostname}:${server.port}${server.servlet.contextPath}/api-doc
                documentationUrl: https://www.zowe.org
        catalog:
            tile:
                id: cademoapps
                title: Sample API Mediation Layer Applications
                description: Applications which demonstrate how to make a service integrated to the API Mediation Layer ecosystem
                version: 1.0.1
    security:
        ssl:
            ciphers: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
            verifySslCertificatesOfServices: true
            protocol: TLSv1.2
            keyAlias: localhost
            keyPassword: password
            keyStore: keystore/localhost/localhost.keystore.p12
            keyStorePassword: password
            keyStoreType: PKCS12
            trustStore: keystore/localhost/localhost.truststore.p12
            trustStorePassword: password
            trustStoreType: PKCS12
    # The `apiml` node contains API Mediation Layer specific configuration

spring:
    output:
        ansi:
            enabled: always

server:
    ssl:
        keyAlias: localhost
        keyPassword: password
        keyStore: keystore/localhost/localhost.keystore.p12
        # keyStore: keystore/selfsigned/localhost.keystore.p12        
        # keyStore: keystore/selfsigned/localhost-untrusted.keystore.p12
        keyStorePassword: password
        keyStoreType: PKCS12
        trustStore: keystore/localhost/localhost.truststore.p12
        # trustStore: keystore/selfsigned/localhost.truststore.p12
        # trustStore: keystore/selfsigned/localhost-untrusted.truststore.p12
        trustStorePassword: password
        trustStoreType: PKCS12

#eureka:
#    instance:
#        metadata-map:
#            mfaas:
#                api-info:
#                    apiVersionProperties:
#                        v1:
#                            title: Service Integration Enabler V2 Sample Application API # © #Copyright is for UTF8 encoding check
#                            description: API of sample API service showing how to integrate a Spring Boot v2.x application
#                            version: 1.0.0
#                            basePackage: com.ca.mfaas.client.api

eureka:
    client:
        serviceUrl:
            defaultZone: ${apiml.service.discoveryServiceUrls}
