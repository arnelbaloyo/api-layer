logging:
    level:
        ROOT: INFO
        com.ca.mfaas: INFO
        org.springframework: WARN
        org.apache.catalina: WARN
        com.netflix: WARN
        com.netflix.discovery: ERROR
        com.netflix.config: ERROR
        com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient: OFF
        com.netflix.discovery.DiscoveryClient: OFF
        org.springframework.boot.web.embedded.tomcat.TomcatWebServer: INFO

spring:
    application:
        name: discoverableclient
    mvc:
        throw-exception-if-no-handler-found: true
    output:
        ansi:
            enabled: detect

server:
    scheme: https
    hostname: localhost # Hostname that is advertised in Eureka. Default is valid only for localhost
    port: 10012         # Default port name for discoverable-client service
    address: 127.0.0.1
    servlet:
        contextPath: /${spring.application.name}
    ssl:
        enabled: true
        protocol: TLSv1.2
        enabled-protocols: TLSv1.2
        ciphers: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
        keyStoreType: PKCS12
        trustStoreType: PKCS12

    compression:
        mime-types: image/png
        enabled: true
        min-response-size: 500

apiml:
    enabled: true
    service:
        serviceId: ${spring.application.name}
        title: Service Spring Integration Enabler sample application API #Â©     #Copyright is for UTF8 encoding check
        description:  Sample API services to demonstrate Spring Integration Enabler

        scheme: ${server.scheme}
        hostname: ${server.hostname}
        port: ${server.port}
        serviceIpAddress: ${server.address}

        baseUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}
        contextPath: ${server.servlet.contextPath}

        homePageRelativeUrl: ${apiml.service.contextPath}
        statusPageRelativeUrl: ${apiml.service.contextPath}/application/info
        healthCheckRelativeUrl: ${apiml.service.contextPath}/application/health

        discoveryServiceUrls: https://localhost:10011/eureka/

        routes:
            -   gateway-url: "ui/v1"
                service-url: ${apiml.service.contextPath}
            -   gateway-url: "api/v1"
                service-url: ${apiml.service.contextPath}/api/v1
            -   gateway-url: "ws/v1"
                service-url: ${apiml.service.contextPath}/ws
        apiInfo:
            -   apiId: org.zowe.discoverableclient
                version: 1.0.0
                gatewayUrl: api/v1
                swaggerUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}${apiml.service.contextPath}/v2/api-docs
                documentationUrl: https://www.zowe.org
        catalog:
            tile:
                id: cademoapps
                title: Sample API Mediation Layer Applications
                description: Applications which demonstrate how to make a service integrated to the API Mediation Layer ecosystem
                version: 1.0.1
        ssl:
            enabled: ${server.ssl.enabled}
            verifySslCertificatesOfServices: true
            ciphers: ${server.ssl.ciphers}
            protocol: ${server.ssl.protocol}
            enabled-protocols: ${server.ssl.protocol}
            keyStoreType: ${server.ssl.keyStoreType}
            trustStoreType: ${server.ssl.trustStoreType}

            ### DEFINE FOLLOWING PROPERTIES IN EXTERNAL CONFIGURATION
            keyAlias: ${server.ssl.keyAlias} #localhost-blah
            keyPassword: ${server.ssl.keyPassword} #password-blah
            keyStore: ${server.ssl.keyStore} #keystore/localhost/localhost.keystore.p12-blah
            keyStorePassword: ${server.ssl.keyStorePassword} #password-blah
            trustStore: ${server.ssl.trustStore} #keystore/localhost/localhost.truststore.p12-blah
            trustStorePassword: ${server.ssl.trustStorePassword} #password-blah

management:
    endpoints:
        web:
            base-path: /application
            exposure:
                include: health,info,routes
    health:
        defaults:
            enabled: false

---
spring:
    profiles: diag

management:
    endpoints:
        web:
            base-path: /application
            exposure:
                include: "*"

---
spring:
    profiles: dev
    profiles.include:
        diag

logging:
    level:
        ROOT: INFO
        com.ca.mfaas: DEBUG
        org.springframework: INFO
        org.apache.catalina: INFO
        com.netflix: INFO

logbackServiceName: ZWEADC1
